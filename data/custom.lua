return {
    servers = {
        lua_language_server = {
            cmd = { "lua-language-server" },
            filetypes = { "lua" },
            root_dir_patterns = { ".git", "init.lua" },
            settings = {
                Lua = {
                    runtime = {
                        version = "LuaJIT",
                        path = (function()
                            local p = package.path
                            local t = {}
                            for m in string.gmatch(p, "([^;]+)") do
                                t[#t + 1] = m
                            end
                            return t
                        end)(),
                    },
                    diagnostics = { globals = { "vim" } },
                    workspace = {
                        checkThirdParty = false,
                        library = { "$VIMRUNTIME/lua", "$CONFIG/lua" },
                    },
                    hint = { enable = true },
                    telemetry = { enable = false },
                },
            },
        },

        jsonls = {
            cmd = { "json-lsp", "--stdio" },
            filetypes = { "json", "jsonc" },
            root_dir_patterns = { ".git", "package.json" },
            init_options = { provideFormatter = false },
            settings = {
                json = {
                    validate = { enable = true },
                    format = { enable = false },
                    schemas = {},
                    schemaDownload = { enable = true },
                    schemaStore = { enable = true, url = "https://www.schemastore.org/api/json/catalog.json" },
                },
            },
        },

        ty = {
            cmd = "AUTO_TY",
            filetypes = { "python" },
            root_dir_patterns = { "pyproject.toml", "setup.cfg", "requirements.txt", "Pipfile", ".git" },
            init_options = { logFile = "$STATE/ty-lsp.log", logLevel = "debug" },
            settings = {
                ty = {
                    disableLanguageServices = false,
                    diagnosticMode = "workspace",
                    inlayHints = { variableTypes = true, callArgumentNames = true },
                    experimental = { rename = true },
                },
            },
        },

        docker_language_server = {
            cmd = { "docker-langserver", "--stdio" },
            filetypes = { "dockerfile" },
            root_dir_patterns = { "Dockerfile", ".git" },
        },
    },

    linters_by_ft = {
        javascript = { "eslint_d" },
        typescript = { "eslint_d" },
        javascriptreact = { "eslint_d" },
        typescriptreact = { "eslint_d" },
        vue = { "eslint_d" },
        svelte = { "eslint_d" },
        css = { "stylelint" },
        html = { "htmlhint" },
        graphql = { "graphql_schema_linter" },
        lua = { "selene" },
        python = { "ruff", "ty" },
        sh = { "shellcheck" },
        bash = { "shellcheck" },
        zsh = { "shellcheck" },
        markdown = { "markdownlint" },
        yaml = { "yamllint" },
        json = { "jsonlint" },
        jsonc = { "biome" },
        dockerfile = { "hadolint" },
        terraform = { "tflint" },
        proto = { "buf_lint" },
        cmake = { "cmakelint" },
        systemd = { "systemdlint" },
        c = { "clangtidy" },
        cpp = { "clangtidy" },
        rust = { "cargo_clippy" },
        go = { "golangcilint" },
        java = { "checkstyle" },
        kotlin = { "ktlint" },
        scala = { "scalafmt" },
        swift = { "swiftlint" },
        ruby = { "rubocop" },
        php = { "phpcs" },
        sql = { "sqlfluff" },
        xml = { "xmllint" },
    },

    linter_defs = {
        ty = {
            cmd = "AUTO_TY_CHECK",
            args = { "--output-format", "text", "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
            parser = "ty_text",
        },
        ruff = {
            cmd = "ruff",
            args = { "check", "--select=ALL", "--ignore=ANN,PGH,TCH", "--quiet", "--stdin-filename", "$FILENAME", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        selene = {
            cmd = "selene",
            args = { "--display-style", "quiet", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        luacheck = {
            cmd = "luacheck",
            args = { "--codes", "--ranges", "--formatter", "plain", "--globals", "vim", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        markdownlint = {
            cmd = "markdownlint",
            args = { "--stdin" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        stylelint = {
            cmd = "stylelint",
            args = { "--stdin", "--stdin-filename", "$FILENAME" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        systemdlint = { cmd = "systemdlint", args = { "-" }, stdin = true, stream = "stdout", ignore_exitcode = true },
        clangtidy = {
            cmd = "clang-tidy",
            args = { "$FILENAME", "--quiet" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        cargo_clippy = {
            cmd = "cargo",
            args = { "clippy", "--message-format", "short", "--manifest-path", "Cargo.toml" },
            stdin = false,
            stream = "stderr",
            ignore_exitcode = true,
        },
        golangcilint = {
            cmd = "golangci-lint",
            args = { "run", "--out-format", "line-number" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        sqlfluff = {
            cmd = "sqlfluff",
            args = { "lint", "--format", "github", "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        checkstyle = {
            cmd = "checkstyle",
            args = { "-f", "plain", "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        ktlint = {
            cmd = "ktlint",
            args = { "--relative", "--stdin", "--reporter=plain" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        scalafmt = { cmd = "scalafmt", args = { "--test" }, stdin = false, stream = "stdout", ignore_exitcode = true },
        swiftlint = {
            cmd = "swiftlint",
            args = { "lint", "--use-stdin" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        rubocop = {
            cmd = "rubocop",
            args = { "--force-exclusion", "--format", "emacs", "--stdin", "$FILENAME" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        phpcs = {
            cmd = "phpcs",
            args = { "--report=emacs", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        yamllint = {
            cmd = "yamllint",
            args = { "-f", "parsable", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        jsonlint = { cmd = "jsonlint", args = { "-c", "-" }, stdin = true, stream = "stdout", ignore_exitcode = true },
        biome = {
            cmd = "biome",
            args = { "check", "--quiet", "--formatter-enabled=false", "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        htmlhint = {
            cmd = "htmlhint",
            args = { "--format", "unix", "-" },
            stdin = true,
            stream = "stdout",
            ignore_exitcode = true,
        },
        buf_lint = {
            cmd = "buf",
            args = { "lint", "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        cmakelint = {
            cmd = "cmakelint",
            args = { "$FILENAME" },
            stdin = false,
            stream = "stdout",
            ignore_exitcode = true,
        },
        hadolint = { cmd = "hadolint", args = { "-" }, stdin = true, stream = "stdout", ignore_exitcode = true },
    },
}
